buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile project(':model')

    compile group: 'info.picocli', name: 'picocli', version: '2.3.0'

    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: "$kotlin_version"
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "$kotlin_version"
    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile project(path: ':model', configuration: 'testOutput')
}

mainClassName = 'de.maibornwolff.codecharta.filter.mergefilter.MergeFilter'
applicationName = 'codecharta-merge'

jar {
    baseName = "${applicationName}"
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
