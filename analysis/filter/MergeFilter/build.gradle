buildscript {
    ext.kotlin_version = '1.2.21'
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile project(':model')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'info.picocli:picocli:2.2.1'

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile project(path: ':model', configuration: 'testOutput')
}

mainClassName = 'de.maibornwolff.codecharta.filter.mergefilter.MergeFilter'
applicationName = 'codecharta-merge'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    baseName = "${applicationName}"
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
