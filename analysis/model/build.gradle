buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: "$kotlin_version"
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "$kotlin_version"
    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile group: 'io.mockk', name: 'mockk', version: '1.7.11'
}

task jarTest(type: Jar, dependsOn: testClasses) {
    from sourceSets.test.output
    classifier = 'test'
}

configurations {
    testOutput
}


artifacts {
    testOutput jarTest
}

jar {
    baseName = 'codecharta-model'
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/model/**'])
        })
    }
}
