buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.sonarqube' version '2.6.2'
    id 'distribution'
}

allprojects {
    group 'de.maibornwolff.codecharta'
    version = currentVersion

    repositories.addAll(rootProject.getBuildscript().getRepositories())

    apply plugin: 'jacoco'
    apply plugin: 'maven'

    jacoco {
        toolVersion = '0.8.0'
    }
}

subprojects {
    apply plugin: 'kotlin'

    dependencies {
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: "$kotlin_version"
    }

    compileJava {
        options.compilerArgs += ['--release', '8']
    }

    compileTestJava {
        options.compilerArgs += ['--release', '8']
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
}

distributions {
    main {
        baseName = 'codecharta-analysis'
        contents {
            from { '../LICENSE.md' }
            from { '../CHANGELOG.md' }

            // Readmes
            from { 'README.md' }

            project.subprojects.each { p ->
                p.plugins.withType(ApplicationPlugin) {
                    into('bin') {
                        from { p.startScripts.outputs.files }
                        fileMode = 0755
                    }
                    into('lib') {
                        from { p.jar }
                    }
                }
            }

            // deprecated ccsh
            from {'dist/ccsh'}
        }
    }
}

sonarqube {
    properties {
        property 'sonar.coverage.exclusions', '**/model/**, **/*Main*'
    }
}

task integrationTest(type: Exec) {
    executable 'sh'
    workingDir('test')
    args '-c', "./golden_test.sh $version"
}

integrationTest.dependsOn build
