buildscript {
    ext.kotlin_version = '1.2.30'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile project(':model')

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: "$kotlin_version"
    compile group: 'com.univocity', name: 'univocity-parsers', version: '2.6.1'
    compile group: 'info.picocli', name: 'picocli', version: '2.3.0'
    compile group: 'io.fastjson', name: 'boon', version: '0.34'

    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: "$kotlin_version"
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "$kotlin_version"
    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

mainClassName = "de.maibornwolff.codecharta.exporter.csv.CSVExporter"
applicationName = 'codecharta-csvexport'

compileJava {
    options.compilerArgs += ['--release', '8']
}

compileTestJava {
    options.compilerArgs += ['--release', '8']
}

jar {
    baseName = "${applicationName}"
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
